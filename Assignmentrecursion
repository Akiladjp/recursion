/* 

01.

Write a recursive function to find the nth Fibonacci number. 
The Fibonacci sequence is defined as follows: F(0) = 0, F(1) = 1, and F(n) = F(n-1) + F(n-2) for n > 1. 
Prompt the user to enter a number and display the corresponding Fibonacci number using recursion. */

import java.util.Scanner;

public class Assignment2_1 {
    public static int fibonacci(int n) {

        if (n == 1 || n == 2) {
            return 1;
        } else {
            return fibonacci(n - 1) + fibonacci(n - 2);
        }

    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the value of n: ");
        int n = scanner.nextInt();

        int fibNum = fibonacci(n);
        System.out.println("The " + n + "th Fibonacci number is: " + fibNum);

    }
}





/*

02.

 Given a set of distinct integers, write a program to generate all possible subsets using recursive backtracking. 
 A subset is a set that contains elements from the original set, with each element appearing zero or one time. 
 Your program should take an array of integers as input and recursively generate all possible subsets. 
 The program should print each subset on a new line.

*/

import java.util.Scanner;

public class Assignment 2_2{

	
	public static void generateCombinations(int[] chars){
		generateCombinationsHelper(chars,"",0);
	}
	
	
	
	private static void generateCombinationsHelper(int[] chars, String currentCombination, int index){
		
		
	System.out.println("["+currentCombination+"]");
		
		for(int i=index; i<chars.length; i++){
			
				
				if(currentCombination.equals("")){
				generateCombinationsHelper(chars,  currentCombination+ chars[i], i+1);
				}
				else{
				generateCombinationsHelper(chars,  currentCombination+","+ chars[i], i+1);
				}				
			
		}
	}
	
	
	public static void main(String[] args){
		
		Scanner input =new Scanner(System.in);
		System.out.println("how many numbers you enter?");
		int length = input.nextInt();
		int [] chars = new int[length];
		System.out.println("Enter numbers one by one");
		for(int i=0;i<length;i++){
			 chars[i] = input.nextInt(	);
		}
		System.out.println("output: ");
		generateCombinations(chars);
	}
	
}
